import logging
import azure.functions as func
from PIL import Image, UnidentifiedImageError
from io import BytesIO
import traceback

def main(req: func.HttpRequest) -> func.HttpResponse:
    logging.info("üü° Funci√≥n Azure iniciada: transformaci√≥n de imagen JPG a TIFF")

    try:
        file_bytes = req.get_body()
        logging.info("üì• Bytes recibidos. Tama√±o: %d bytes", len(file_bytes))

        if not file_bytes:
            logging.warning("‚ö†Ô∏è No se recibi√≥ ning√∫n cuerpo en la petici√≥n")
            return func.HttpResponse("No se ha enviado ninguna imagen", status_code=400)

        try:
            image = Image.open(BytesIO(file_bytes))
            logging.info("üñºÔ∏è Imagen cargada: %s, formato original: %s", image.size, image.format)
        except UnidentifiedImageError:
            logging.error("‚ùå No se pudo identificar la imagen enviada (¬øno es JPG v√°lido?)")
            return func.HttpResponse("Formato de imagen no v√°lido o corrupto", status_code=400)

        output_stream = BytesIO()
        image.save(output_stream, format='TIFF')
        output_stream.seek(0)
        logging.info("‚úÖ Conversi√≥n a TIFF completada correctamente")

        return func.HttpResponse(
            output_stream.read(),
            mimetype="image/tiff",
            status_code=200
        )

    except Exception as e:
        error_trace = traceback.format_exc()
        logging.error("‚ùå Error al procesar la imagen: %s", error_trace)
        return func.HttpResponse(f"Error interno: {error_trace}", status_code=500)

